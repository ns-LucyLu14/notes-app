{"ast":null,"code":"var _jsxFileName = \"/Users/lucylu/Desktop/REACT-Personal-projects/notes-app/src/pages/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notes() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/notes\").then(response => response.json()).then(data => setNotes(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: note.title\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Notes, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n\n_c = Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/lucylu/Desktop/REACT-Personal-projects/notes-app/src/pages/Notes.js"],"names":["React","useEffect","useState","Notes","notes","setNotes","fetch","then","response","json","data","map","note","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUL,QAAQ,CAACK,IAAD,CAF1B;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,cACGN,KAAK,CAACO,GAAN,CAAWC,IAAD,iBACT;AAAA,gBAAkBA,IAAI,CAACC;AAAvB,OAAQD,IAAI,CAACE,EAAb;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhBuBX,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/notes\")\n      .then((response) => response.json())\n      .then((data) => setNotes(data));\n  }, []);\n\n  return (\n    <div>\n      {notes.map((note) => (\n        <p key={note.id}>{note.title}</p>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}