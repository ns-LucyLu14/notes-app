{"ast":null,"code":"var _jsxFileName = \"/Users/lucylu/Desktop/REACT-Personal-projects/notes-app/src/pages/Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Container } from \"@mui/material\";\nimport NoteCard from \"../components/NoteCard\";\nimport Masonry from \"react-masonry-css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Notes() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/notes\").then(response => response.json()).then(data => setNotes(data));\n  }, []);\n\n  const handleDelete = async id => {\n    await fetch(\"http://localhost:8000/notes/\" + id, {\n      method: \"DELETE\"\n    });\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpoints,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(NoteCard, {\n          note: note,\n          onDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Notes, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n\n_c = Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/lucylu/Desktop/REACT-Personal-projects/notes-app/src/pages/Notes.js"],"names":["React","useEffect","useState","Grid","Container","NoteCard","Masonry","Notes","notes","setNotes","fetch","then","response","json","data","handleDelete","id","method","newNotes","filter","note","breakpoints","default","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUL,QAAQ,CAACK,IAAD,CAF1B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,YAAY,GAAG,MAAOC,EAAP,IAAc;AACjC,UAAMN,KAAK,CAAC,iCAAiCM,EAAlC,EAAsC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAtC,CAAX;AAEA,UAAMC,QAAQ,GAAGV,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAnC,CAAjB;AACAP,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,GALD;;AAOA,QAAMG,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE,CADS;AAElB,UAAM,CAFY;AAGlB,SAAK;AAHa,GAApB;AAMA,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA,2BACE,QAAC,OAAD;AACE,MAAA,cAAc,EAAED,WADlB;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,eAAe,EAAC,wBAHlB;AAAA,gBAKGb,KAAK,CAACe,GAAN,CAAWH,IAAD,iBACT;AAAK,QAAA,IAAI,MAAT;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,IAAhB;AAAsB,UAAA,QAAQ,EAAEL;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF,SAAeK,IAAI,CAACJ,EAApB;AAAA;AAAA;AAAA;AAAA,cADD;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GArCuBT,K;;KAAAA,K","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Container } from \"@mui/material\";\nimport NoteCard from \"../components/NoteCard\";\nimport Masonry from \"react-masonry-css\";\n\nexport default function Notes() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8000/notes\")\n      .then((response) => response.json())\n      .then((data) => setNotes(data));\n  }, []);\n\n  const handleDelete = async (id) => {\n    await fetch(\"http://localhost:8000/notes/\" + id, { method: \"DELETE\" });\n\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1,\n  };\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {notes.map((note) => (\n          <div item key={note.id}>\n            <NoteCard note={note} onDelete={handleDelete} />\n          </div>\n        ))}\n      </Masonry>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}